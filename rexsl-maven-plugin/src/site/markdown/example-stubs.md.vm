# How to add extra functionality during tests?

For example, you want to test your application's behavior when
some unexpected runtime exception is happening. You need to inject
a special block of code into your application during tests that will
throw such an exception, and your test scripts will validate application
behavior. We can do it with test stubs located together with your test
classes:

```
/foo
  pom.xml
  /src
    /main
    /test
      /java
        /foo
          HomeTest.java
          RuntimeExceptionStub.java
      /rexsl
        /scripts
          WhatIfRuntimeException.groovy
```

This is how `RuntimeExceptionStub.java` may look like:

```java
package foo;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
@Path("/runtime-exception")
public class RuntimeExceptionStub {
  @GET
  public String throwIt() {
    throw new IllegalStateException("hello, world!");
  }
}
```

This is how we may test it from `WhatIfRuntimeException.groovy`:

```
import com.rexsl.test.ApacheRequest
import com.rexsl.test.RestResponse
new ApacheRequest(rexsl.home)
  .fetch()
  .as(RestResponse.class)
  .assertStatus(HttpURLConnection.HTTP_OK)
```

The test should pass, and may be extended with additional validations. We
may check what exactly is returned, how this page is formatted, etc. The
same way as you check regular pages/responses.

